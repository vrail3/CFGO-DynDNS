name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches:
      - main
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'

jobs:
  docker:
    name: Build and push CFGO-DynDNS
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/cfgo-dyndns
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{version}}-amd64,enable=${{ startsWith(github.ref, 'refs/tags/') }},platform=linux/amd64
            type=raw,value={{version}}-arm64,enable=${{ startsWith(github.ref, 'refs/tags/') }},platform=linux/arm64
          labels: |
            org.opencontainers.image.title=CFGO-DynDNS
            org.opencontainers.image.description=Cloudflare Dynamic DNS Updater
            org.opencontainers.image.source=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}
            org.opencontainers.image.version={{version}}
            org.opencontainers.image.created={{date 'yyyy-MM-dd'}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache